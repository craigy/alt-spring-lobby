name: Build Release Artifacts

on:
  release:
    types: [created]

jobs:
  build-deb:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: FranzDiebold/github-env-vars-action@v2.1.0
      - uses: actions/setup-java@v1.4.3
        with:
          java-version: '14'
      - uses: DeLaGuardo/setup-clojure@3.1
        with:
          cli: '1.10.1.763'
      - run: clojure -M:uberjar:headless
      - uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/${{ env.CI_REPOSITORY_NAME }}.jar
          asset_name: ${{ env.CI_REPOSITORY_NAME }}-${{ env.CI_REF_NAME }}-linux.jar
          asset_content_type: application/java-archive
      - run: jpackage @jpackage/common @jpackage/linux
      - uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ env.CI_REPOSITORY_NAME }}_1.0-1_amd64.deb
          asset_name: ${{ env.CI_REPOSITORY_NAME }}-${{ env.CI_REF_NAME }}_amd64.deb
          asset_content_type: application/vnd.debian.binary-package
  build-dmg:
    runs-on: macOS-10.15
    steps:
      - uses: actions/checkout@v2
      - uses: FranzDiebold/github-env-vars-action@v2.1.0
      - uses: actions/setup-java@v1.4.3
        with:
          java-version: '14'
      - uses: DeLaGuardo/setup-clojure@3.1
        with:
          cli: '1.10.1.763'
      - run: clojure -M:uberjar:headless
      - uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/${{ env.CI_REPOSITORY_NAME }}.jar
          asset_name: ${{ env.CI_REPOSITORY_NAME }}-${{ env.CI_REF_NAME }}-mac.jar
          asset_content_type: application/java-archive
      - run: jpackage @jpackage/common @jpackage/mac
      - uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ env.CI_REPOSITORY_NAME }}-1.0.dmg
          asset_name: ${{ env.CI_REPOSITORY_NAME }}-${{ env.CI_REF_NAME }}.dmg
          asset_content_type: application/x-apple-diskimage
  build-exe:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - uses: FranzDiebold/github-env-vars-action@v2.1.0
      - uses: actions/setup-java@v1.4.3
        with:
          java-version: '14'
      - run: iwr -useb download.clojure.org/install/win-install-1.10.1.763.ps1 | iex
      - run: clojure -M:uberjar:headless
      - uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/${{ env.CI_REPOSITORY_NAME }}.jar
          asset_name: ${{ env.CI_REPOSITORY_NAME }}-${{ env.CI_REF_NAME }}-windows.jar
          asset_content_type: application/java-archive
      - run: jpackage @jpackage/common @jpackage/windows
      - uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ env.CI_REPOSITORY_NAME }}-1.0.exe
          asset_name: ${{ env.CI_REPOSITORY_NAME }}-${{ env.CI_REF_NAME }}.exe
          asset_content_type: application/vnd.microsoft.portable-executable
